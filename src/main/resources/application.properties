#spring.data.mongodb.database=film_collection
spring.data.mongodb.uri=mongodb://${DOCKER_MONGO_USERNAME}:${DOCKER_MONGO_PASSWORD}@films-mongo/film_collection?authSource=admin
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
server.port=8888

#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore.p12
# The password used to generate the certificate
#server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD}
# The alias mapped to the certificate
#server.ssl.key-alias=${SSL_KEY_STORE_ALIAS}

# Mongo healthcheck
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*

films.findAllFilmsURI=/v1/all
films.addFilmURI=/v1/addFilm
films.addFilmHttpURI=/v1/addFilmHttp
films.addMultipleFilmsURI=/v1/addMultipleFilms
films.findFilmsByActorURI=/v1/findFilmsByActor
films.findFilmsByReleaseDateURI=/v1/findFilmsByReleaseDate
films.findFilmsByReleaseYearURI=/v1/findFilmsByReleaseYear
films.findFilmsByGenreURI=/v1/findAllByGenre
films.findFilmsByDirectorURI=/v1/findFilmsByDirector
films.findFilmsByComposerURI=/v1/findFilmsByComposer
films.findFilmsByCinematographerURI=/v1/findFilmsByCinematographer
films.findFilmsByWriterURI=/v1/findFilmsByWriter
films.findFilmByTitleURI=/v1/findFilmByTitle
films.getFilmIdURI=/v1/getFilmId

spring.banner.location=banner.txt